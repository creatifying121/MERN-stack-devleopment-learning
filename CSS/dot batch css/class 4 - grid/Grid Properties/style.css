*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
.container {
    border: 3px solid brown;
    background-color: yellow;
    display: grid;
    grid-template-columns: repeat(3, 100px);
    grid-template-rows: repeat(2, 100px);
    gap: 10px;
    height: 700px;
    width: 600px;

    /* justify content : columns ke beech ki space ke baare mein baat hogi */
    /* justify-content: start;
    justify-content: end;
    justify-content: center;
    justify-content: space-between;
    justify-content: space-around;
    justify-content: space-evenly; */

    /* align content : rows ke beech ki space ke baare mein baat horhi hai */
    /* align-content: start;
    align-content: end;
    align-content: space-between;
    align-content: space-around;
    align-content: space-evenly; */

    /* align items */
    /* align-items: start;
    align-items: end;
    align-items: center;
    align-items: baseline;
    align-items: stretch; */

    /* place items : short hand for justify-items and align-items */
    /* place-items: center; */

    /* place-content: short hand for justify-content and align-content */
    /* place-content: center; */

    /* item vs content: while talking about content, it will not affect the width and height of the content, while when we talk about item, then it will effect the width and height of the box (it will be applied to the content inside the box, and not on the box).
    
    self: when we talk about justify self and align self, then they will work on a single box in number of boxes. */
}
.box{
    border: 3px solid red;
    background-color: aqua;
}

/* #box1{ */
    /* justify self: child item ka content kaise place hoga uske baare mein baat krenge */
    /* justify-self: start;
    justify-self: end;
    justify-self: center;
    justify-self: first baseline;
    justify-self: last baseline;
    justify-self: unset;
    justify-self: save; */

    /* align-self : child item ka content kaise place hoga uske baare mein baat krenge */
    /* align-self: start;
    align-self: end;
    align-self: center;
    align-self: stretch;
    align-self: baseline; */
/* } */

/* h.w.
   complex grid layout
   nesting and overlapping grid items
   create a layout where you will be using grid and flex both
*/